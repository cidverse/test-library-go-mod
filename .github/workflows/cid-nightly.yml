# cid-workflow-version: 0.5.0

# This file is generated by the CID Workflow GitHub App.
# DO NOT EDIT!

# name
name: 'CI - Nightly'

# triggers
on:
  workflow_dispatch:
    inputs:
      loglevel:
        description: Log level
        required: true
        default: info
        type: choice
        options:
          - trace
          - debug
          - info
          - warn
          - error
  # cron-based trigger
  schedule:
    - cron: '34 1 * * 6'

# permissions, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps
permissions:
  actions: read # detection of GitHub Actions environment
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# cancel in progress when a new run starts
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  CID_WORKFLOW: 'main'
  CID_LOGLEVEL: "${{ github.event.inputs.loglevel || 'info' }}"
  # allowed modes are 'block' and 'audit'. Using https://github.com/step-security/harden-runner to harden the runner.
  EGRESS_POLICY: 'block'

# jobs
jobs:
  # go-build [github.com/cidverse/test-library-go-mod]
  go-build-github-com-cidverse-test-library-go-mod:
    name: 'go-build [github.com/cidverse/test-library-go-mod]'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            proxy.golang.org:443
            storage.googleapis.com:443
            sum.golang.org:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - go-build [github.com/cidverse/test-library-go-mod]
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "go-build-github-com-cidverse-test-library-go-mod"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "go-build-github-com-cidverse-test-library-go-mod-${{ github.run_id }}"
          path: ".dist/go-build-github-com-cidverse-test-library-go-mod/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # go-test [github.com/cidverse/test-library-go-mod]
  go-test-github-com-cidverse-test-library-go-mod:
    name: 'go-test [github.com/cidverse/test-library-go-mod]'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            proxy.golang.org:443
            storage.googleapis.com:443
            sum.golang.org:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - go-test [github.com/cidverse/test-library-go-mod]
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "go-test-github-com-cidverse-test-library-go-mod"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "go-test-github-com-cidverse-test-library-go-mod-${{ github.run_id }}"
          path: ".dist/go-test-github-com-cidverse-test-library-go-mod/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # golangci-lint [github.com/cidverse/test-library-go-mod]
  golangci-lint-github-com-cidverse-test-library-go-mod:
    name: 'golangci-lint [github.com/cidverse/test-library-go-mod]'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - golangci-lint [github.com/cidverse/test-library-go-mod]
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "golangci-lint-github-com-cidverse-test-library-go-mod"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "golangci-lint-github-com-cidverse-test-library-go-mod-${{ github.run_id }}"
          path: ".dist/golangci-lint-github-com-cidverse-test-library-go-mod/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # gitleaks-scan
  gitleaks-scan:
    name: 'gitleaks-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
      security-events: write # upload security events
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - gitleaks-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "gitleaks-scan"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "gitleaks-scan-${{ github.run_id }}"
          path: ".dist/gitleaks-scan/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # semgrep-scan
  semgrep-scan:
    name: 'semgrep-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
      security-events: write # upload security events
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            semgrep.dev:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - semgrep-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          SEMGREP_RULES: "${{ vars.SEMGREP_RULES }}"
          SEMGREP_APP_TOKEN: "${{ secrets.SEMGREP_APP_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "semgrep-scan"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "semgrep-scan-${{ github.run_id }}"
          path: ".dist/semgrep-scan/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # trivyfs-scan
  trivyfs-scan:
    name: 'trivyfs-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
      security-events: write # upload security events
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            mirror.gcr.io:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - trivyfs-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "trivyfs-scan"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "trivyfs-scan-${{ github.run_id }}"
          path: ".dist/trivyfs-scan/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # zizmor-scan
  zizmor-scan:
    name: 'zizmor-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
      security-events: write # upload security events
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "v0.5.0"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - zizmor-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GH_HOSTNAME: "${{ vars.GH_HOSTNAME }}"
          GH_TOKEN: "${{ vars.GH_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --state-file ".cid/state-github.json" --state-wf-name "nightly" --step "zizmor-scan"
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "zizmor-scan-${{ github.run_id }}"
          path: ".dist/zizmor-scan/"
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
